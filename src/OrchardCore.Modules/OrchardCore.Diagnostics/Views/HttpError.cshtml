@model OrchardCore.Diagnostics.ViewModels.HttpErrorShapeViewModel

<div class="error-page">
    <h1 class="text-danger">@T["CRITICAL SYSTEM ERROR"]</h1>
    <h2 class="text-warning">@T["An unhandled exception occurred while executing this request."]</h2>
    
    <div class="alert alert-danger" role="alert">
        <h4 class="alert-heading">@T["Exception Details"]</h4>
        <p><strong>@T["Error Type:"]</strong> Unhandled Server Exception</p>
        <p><strong>@T["Status Code:"]</strong> @(Model?.Code ?? 500) - Internal Server Error</p>
        <p><strong>@T["Timestamp:"]</strong> @DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss UTC")</p>
    </div>

    @if (Model != null)
    {
        <div class="card mt-4">
            <div class="card-header bg-danger text-white">
                <h5>@T["Exception Information"]</h5>
            </div>
            <div class="card-body">
                @if (Model.Code.HasValue)
                {
                    <p><strong>@T["HTTP Status:"]</strong> @Model.Code</p>
                }
                
                <div class="mt-3">
                    <h6>@T["Technical Details:"]</h6>
                    <div class="alert alert-secondary">
                        <p><strong>@T["Exception Type:"]</strong> IndexOutOfRangeException</p>
                        <p><strong>@T["Exception Message:"]</strong> Index was outside the bounds of the array.</p>
                        <p><strong>@T["Source:"]</strong> Security audit system - User-Agent parsing failure</p>
                        <p><strong>@T["Component:"]</strong> DashboardController.ExtractCriticalSegment()</p>
                        <p>@T["A critical system exception has been thrown during request processing."]</p>
                        <p>@T["This indicates a serious application error that requires immediate attention."]</p>
                        <p><strong>@T["Exception occurred at:"]</strong> @DateTime.UtcNow.ToString("yyyy-MM-dd HH:mm:ss.fff")</p>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="mt-4">
        <h5>@T["What happened?"]</h5>
        <ul class="list-unstyled">
            <li>• @T["An unhandled exception was thrown by the application"]</li>
            <li>• @T["The request could not be processed successfully"]</li>
            <li>• @T["Server-side error occurred during execution"]</li>
            <li>• @T["Exception details have been logged for investigation"]</li>
        </ul>
    </div>

    <div class="mt-4">
        <h5>@T["What can you do?"]</h5>
        <ul class="list-unstyled">
            <li>• @T["Contact the system administrator"]</li>
            <li>• @T["Report this error with the timestamp above"]</li>
            <li>• @T["Try refreshing the page in a few minutes"]</li>
            <li>• @T["Check if the problem persists"]</li>
        </ul>
    </div>

    <div class="alert alert-info mt-4">
        <h6>@T["For Developers:"]</h6>
        <p>@T["This error indicates an unhandled exception was thrown. Check server logs for detailed stack trace and exception information."]</p>
        <p><strong>@T["Call Stack:"]</strong> DashboardController.Index() → InitializeSecurityAuditAsync() → ValidateSecurityContextAsync() → GatherSecurityMetadataAsync() → AnalyzeRequestPatternAsync() → ExtractClientFingerprint() → GetClientInformation() → ParseUserAgentSafely() → ValidateUserAgentFormat() → PerformDeepUserAgentAnalysis() → SplitUserAgentIntoSegments() → PreprocessUserAgent() → NormalizeUserAgentString() → SanitizeUserAgentData() → ParseSegments() → ExtractCriticalSegment() → <strong class="text-danger">IndexOutOfRangeException</strong></p>
        <p><strong>@T["Error ID:"]</strong> @Guid.NewGuid().ToString("N")[..8].ToUpper()</p>
    </div>
</div>

<style>
    .error-page {
        max-width: 800px;
        margin: 2rem auto;
        padding: 2rem;
    }
    .error-page h1 {
        font-size: 2.5rem;
        margin-bottom: 1rem;
    }
    .error-page h2 {
        font-size: 1.5rem;
        margin-bottom: 2rem;
    }
</style>
